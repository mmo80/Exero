
Cypher:
MATCH (x:User {id:'4bcbc300-bc69-4359-b286-e5472d76c415'}) RETURN x

MATCH (l:User) RETURN { id: ID(l), email: l.email } as user

Add new property to node type
MATCH (n:User { email: 'test@test.se' })
 SET n.id = '4bcbc300-bc69-4359-b286-e5472d76c415'
 RETURN n

 MATCH (l:User) RETURN { id: ID(l), email: l.email } as user

CREATE (n:ExerciseCategory)
CREATE (n:ExerciseCategory { id: '5770b9d0-7d46-415f-970e-99494d64152e', name: 'Chest', note:'' })


HAS_CATEGORY

CREATE (l:User { email: 'test@test.se' })-[:HAS_CATEGORY]->(c:ExerciseCategory {  })

// Connect Sally to Graph Databases book
CREATE (sally)-[:HAS_READ { rating: 4, on: 1360396800 }]->(gdb)


MATCH (n1:Label1)-[rel:TYPE]->(n2:Label2)
WHERE rel.property > {value}
RETURN rel.property, type(rel)



MATCH (neo:Database {name:"Neo4j"})
MATCH (anna:Person {name:"Anna"})
CREATE (anna)-[:FRIEND]->(:Person:Expert {name:"Amanda"})-[:WORKED_WITH]->(neo)



c37a1025-21d5-4971-be7d-6fdf69d37d6d
daf33ccf-045e-4f7f-b9ce-5aecf29f4e3e
758f55fc-a02b-4919-baff-728e4cd1cc29













CREATE (n:Category { id: 'f2aa9464-189c-49f9-8b6a-5f5451ed0a24', name: 'Strength' })
CREATE (n:Category { id: 'c37b2c46-d838-4e0d-a517-bb230c598da4', name: 'Conditioning' })


CREATE (n:WorkoutType { id: '8686c885-8296-4bfd-b266-706a3878fe3c', name: 'Chest' })
CREATE (n:WorkoutType { id: '71f96aff-165d-4d2c-97e3-6d79066aa8d5', name: 'Running' })



MATCH (c:Category {name:"Conditioning"})
MATCH (wt:WorkoutType {name:"Running"})
CREATE (wt)-[:HAS_CATEGORY]->(c)
RETURN c, wt

MATCH (n:Category) 
WHERE id(n) = 5
DELETE n


// delete node and all inbound relations
OPTIONAL MATCH (c:Category)<-[r]-()
WHERE c.id = 123
DELETE r, c


// existing nodes with new relationship
MATCH (strength:Category {name:"Strength"})
MATCH (chest:WorkoutType {name:"Chest"})
CREATE (chest)-[:HAS_CATEGORY]->(strength)
RETURN strength, chest


// new nodes with new relationship
CREATE (n:WorkoutType { id: '8686c885-8296-4bfd-b266-706a3878fe3c' })-[:HAS_CATEGORY]->(c:Category { id: 'f2aa9464-189c-49f9-8b6a-5f5451ed0a24' })



CREATE (n:User { id: '2ffa1077-5d93-4ccc-a69c-c420f2e84e22', email: 'test@test.se' })


CREATE (n:Workout { id: 'e4cd73c1-ffdf-4c58-8486-a0c6a6c7d1be', name: 'Benchpress' })
CREATE (n:Workout { id: '7eb66864-94cd-48a9-adea-3183a0aed039', name: '5 km' })




MATCH (w:Workout {name:"5 km"})
MATCH (wt:WorkoutType {name: 'Running'})
CREATE (w)-[:HAS_TYPE]->(wt)
RETURN w, wt


MATCH (benchpress:Workout {name:"Benchpress"})
MATCH (chest:WorkoutType {name: 'Chest'})
CREATE (benchpress)-[:HAS_TYPE]->(chest)
RETURN benchpress, chest



MATCH (benchpress:Workout {name:"Benchpress"})
MATCH (user:User {email: 'test@test.se'})
CREATE (user)-[:WORKES_OUT]->(benchpress)
RETURN user, benchpress



MATCH (w:Workout {name:"5 km"})
MATCH (user:User {email: 'test@test.se'})
CREATE (user)-[:WORKES_OUT]->(w)
RETURN user, w


MATCH (n)-[r]-()
WHERE id(n) = 5
DELETE r, n



// Delete all
MATCH (n)-[r]-()
DELETE r, n

--------------------------

MATCH (u:User {username: "mick"}), (mg:MuscleGroup {name: "Legs"}) 
WITH u, mg CREATE (u)-[r:DESIRES]->(mg) SET r.importance = toFloat(0.2);

CREATE CONSTRAINT ON (c:Category) ASSERT c.name IS UNIQUE;

CREATE CONSTRAINT ON (u:User) ASSERT u.username IS UNIQUE;

=== GENEREATE DATABASE ===

MATCH (wtc:ExerciseGroup)
WHERE wtc.id = '8686c885-8296-4bfd-b266-706a3878fe3c'
CREATE
(edbp:Exercise { id: '256ba0fd-1e4e-463c-84d5-058d665d80f9', name: 'Dumbbell Bench Press' }),
(edbp)-[:FOR_EXERCISE_GROUP]->(wtc)


MATCH (cs:Category)
WHERE cs.id = 'f2aa9464-189c-49f9-8b6a-5f5451ed0a24'
CREATE
(wtb:ExerciseGroup { id: '76d7f708-8b60-4e5f-965c-b310c1e32dc2', name: 'Biceps' }),
(wtb)-[:FOR_CATEGORY]->(cs)


CREATE 
(cs:Category { id: 'f2aa9464-189c-49f9-8b6a-5f5451ed0a24', name: 'Strength' }),
(cc:Category { id: 'c37b2c46-d838-4e0d-a517-bb230c598da4', name: 'Conditioning' }),
(wtc:ExerciseGroup { id: '8686c885-8296-4bfd-b266-706a3878fe3c', name: 'Chest' }),
(wtb:ExerciseGroup { id: '76d7f708-8b60-4e5f-965c-b310c1e32dc2', name: 'Biceps' }),
(wtr:ExerciseGroup { id: '71f96aff-165d-4d2c-97e3-6d79066aa8d5', name: 'Running' }),
(wtc)-[:FOR_CATEGORY]->(cs),
(wtb)-[:FOR_CATEGORY]->(cs),
(wtr)-[:FOR_CATEGORY]->(cc),
(u:User { id: '2ffa1077-5d93-4ccc-a69c-c420f2e84e22', email: 'test@test.se' }),
(eb:Exercise { id: 'e4cd73c1-ffdf-4c58-8486-a0c6a6c7d1be', name: 'Benchpress' }),
(edbp:Exercise { id: '256ba0fd-1e4e-463c-84d5-058d665d80f9', name: 'Dumbbell Bench Press' }),
(ef:Exercise { id: '7eb66864-94cd-48a9-adea-3183a0aed039', name: '5 km' }),
(eb)-[:FOR_EXERCISE_GROUP]->(wtc),
(edbp)-[:FOR_EXERCISE_GROUP]->(wtc),
(ef)-[:FOR_EXERCISE_GROUP]->(wtr),
(u)-[:DOES_EXERCISE]->(eb),
(u)-[:DOES_EXERCISE]->(ef),
(er1:ExerciseRecord { id: 'b3df2e05-7597-4582-870b-e9b751521279', epochTimestamp: 1512990000, set: 1, reps: 20, value: 20, unit: 'kg', dropSet:false }),
(er2:ExerciseRecord { id: '223980cd-0cbb-4cf5-85ca-1bfb7932b991', epochTimestamp: 1512990180, set: 2, reps: 12, value: 30, unit: 'kg', dropSet:false }),
(er3:ExerciseRecord { id: '81062805-4c2b-4c56-9957-ae0025a1715a', epochTimestamp: 1512990360, set: 3, reps: 7, value: 40, unit: 'kg', dropSet:false }),
(er4:ExerciseRecord { id: '71e6ac94-798f-44ae-a098-348949e63382', epochTimestamp: 1512990540, set: 4, reps: 8, value: 40, unit: 'kg', dropSet:false }),
(er1)-[:FOR_EXERCISE]->(eb),
(er2)-[:FOR_EXERCISE]->(eb),
(er3)-[:FOR_EXERCISE]->(eb),
(er4)-[:FOR_EXERCISE]->(eb),
(esb:ExerciseSession { id:'3e948699-cedf-4bad-a8ab-b1740b61a966', note:'Montes' }),
(er1)-[:FOR_EXERCISE_SESSION]->(esb),
(er2)-[:FOR_EXERCISE_SESSION]->(esb),
(er3)-[:FOR_EXERCISE_SESSION]->(esb),
(er4)-[:FOR_EXERCISE_SESSION]->(esb),
(ws1:WorkoutSession { id:'05233326-63b8-46d5-ba69-fd66def56d3d', note:'Felt great!' }),
(esb)-[:FOR_WORKOUT_SESSION]->(ws1),
(ws1)-[:BY_USER]->(u),
(ues1:UserExerciseSetting { id:'7edad185-6fff-4b80-b5cc-4957d43ef0c7', restTimeSeconds:90, unit:'kg' }),
(ues1)-[:FOR_EXERCISE_SETTING]->(eb),
(ues1)-[:FOR_USER]->(u)


CREATE CONSTRAINT ON (c:Category) ASSERT c.id IS UNIQUE;
CREATE CONSTRAINT ON (eg:ExerciseGroup) ASSERT eg.id IS UNIQUE;
CREATE CONSTRAINT ON (e:Exercise) ASSERT e.id IS UNIQUE;
...


05ff8f38-64ba-47d6-964b-b355ef32b278
3eaa282b-a043-4578-bbd4-fd34eaa760e6

==========================

Category
ExerciseGroup -[:FOR_CATEGORY]-> Category
Exercise -[:FOR_EXERCISE_GROUP]-> ExerciseGroup
User -[:RECORDED_EXERCISE]-> ExerciseRecord
     -[:DOES_EXERCISE]-> Exercise
UserExerciseSetting -[:FOR_EXERCISE_SETTING]-> Exercise
                    -[:FOR_USER]-> User
ExerciseRecord -[:FOR_EXERCISE_SESSION]-> ExerciseSession
               -[:FOR_EXERCISE]-> Exercise
ExerciseSession -[:FOR_WORKOUT_SESSION]-> WorkoutSession
WorkoutSession -[:BY_USER]-> User



Category *
- name

ExerciseGroup * -[:FOR_CATEGORY]-> Category
- name
- note

Exercise * -[:FOR_EXERCISE_GROUP]-> ExerciseGroup
- name
- note
- imageUrl
- videoUrl

* Available for all users


User -[:RECORDED_EXERCISE]-> ExerciseRecord
     -[:DOES_EXERCISE]-> Exercise
- email
- ...

UserExerciseSetting -[:FOR_EXERCISE_SETTING]-> Exercise
                    -[:FOR_USER]-> User
- restTimeSeconds
- unit

ExerciseRecord -[:FOR_EXERCISE_SESSION]-> ExerciseSession
               -[:FOR_EXERCISE]-> Exercise
- epochTimestamp
- set (string) 1, 1B, 1C (dropset)
- reps
- value
- unit
- note
- dropSet (bool)
- videoUrl / videoFile

ExerciseSession -[:FOR_WORKOUT_SESSION]-> WorkoutSession
- note

WorkoutSession -[:BY_USER]-> User
- startEpochTimestamp
- endEpochTimestamp
- note
- imageUrl


==========================
